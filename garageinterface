#!/usr/bin/perl
use strict;
use warnings;

# https://metacpan.org/pod/release/COOK/Device-SerialPort-0.11/SerialPort.pm
# apt-get install libdevice-serialport-perl
use Device::SerialPort;
use Time::HiRes qw( clock );

# Serial port needs permissions - setup sudo
# www-data ALL=(root) NOPASSWD: /var/www/html/garage/garageinterface
my $serial = '/dev/ttyACM0';

# CanaKit UK1104 manual: https://www.canakit.com/Media/Manuals/UK1104.pdf
# Relay on the CanaKit UK1104 board is connected to garage door
my $relay = 'REL1';

my $press_door_button = 0;
my @commands = ();

my $numArgs = $#ARGV + 1;

if( ( $numArgs == 0 ) ){
	usage();
	exit;
}

for(my $i = 0; $i < $numArgs; $i++ ){
	my $param = $ARGV[$i];
	
	if( $param eq '--press-door-button' ){
		$press_door_button = 1;
	}
	else{
		push @commands, $param;
	}
}

my $port = Device::SerialPort->new( $serial );
if( not $port ){
	die "Could not open serial $serial port";
}
$port->baudrate( 9600 ); 
$port->databits( 8 );
$port->parity( "none" );
$port->stopbits( 1 );

$port->write( "\r\n" );

if( $press_door_button ){
	wait_for_prompt( 0.5 );
	execute_command( $relay . '.ON' );
  	Time::HiRes::sleep ( 0.5 );
	execute_command( $relay . '.OFF' );
}

foreach my $command( @commands ){
	wait_for_prompt( 0.5 );
	print "Issuing command $command\n";
	execute_command( $command );
}

sub execute_command{
	my ($command) = @_;

	$port->write( $command . "\r\n" );
	wait_for_prompt( 0.5 );
}

# Param: max # seconds (can be fractional) to sleep
sub wait_for_prompt{
	my ( $max_wait ) = @_;
	my $buffer = '';

  	my $start_time = clock();
	while( ( ! $buffer ) && ( clock() - $start_time < $max_wait ) ) {
	    # my $char = $port->lookfor();
	    my $chars;
	    while ( $chars = $port->lookfor() ) {
			print "Received characters: $chars \n";
			$buffer = $buffer . $chars;
	    }
	    $port->lookclear; # needed to prevent blocking
	}
	print "Buffer: $buffer\n";
}

sub usage{
	my $prog = $0;
	$prog =~ s/^.*\///;
	print "Usage: $prog [COMMAND | --press-door-button]\n\n";
	print "  Interface for CanaKit UK1104 relay\n\n";
	print "  COMMAND is the command to pass directly to the relay board\n";
	print "  --press-door-button issues the equivalent of a door button press\n";
	print "\n";
}
